name: class_link
version: 0.1.5+6
publish_to: none
description: A new Flutter project.
environment: 
  sdk: '>=2.16.1 <3.0.0'

dependencies: 
  cupertino_icons: ^1.0.4
  google_fonts: ^2.1.1
  flutter_svg: ^1.0.0
  get: ^4.6.1
  firebase_core: ^1.10.6
  firebase_auth: ^3.3.4
  google_sign_in: ^5.2.1
  cloud_firestore: ^3.1.5
  freezed_annotation: ^1.1.0
  json_annotation: ^4.3.0
  hive: ^2.0.4
  hive_flutter: ^1.1.0
  meta: ^1.7.0
  cached_network_image: ^3.1.0+1
  font_awesome_flutter: ^9.2.0
  implicitly_animated_reorderable_list: ^0.4.2
  animations: ^2.0.2
  vibration: ^1.7.4-nullsafety.0
  flex_color_scheme: ^4.1.1
  sliding_sheet: ^0.5.2
  url_launcher: ^6.0.17
  day_night_time_picker: ^1.0.4+1
  gsheets: ^0.3.2
  in_app_update: ^2.0.0
  share_plus: ^3.0.4
  flutter_local_notifications: ^9.2.0
  flutter:
    sdk: flutter
  intl: ^0.17.0

dev_dependencies: 
  flutter_lints: ^1.0.0
  hive_generator: ^1.1.1
  build_runner: ^2.1.4
  freezed: ^1.1.0
  json_serializable: ^6.0.1
  flutter_native_splash: ^2.0.1+1
  flutter_gen: ^4.1.5
  mockito: ^5.0.17

  flutter_test: 
    sdk: flutter

flutter_gen:
  output: lib/app/gen/
  integrations:
    flutter_svg: true
  assets:
    enabled: true

flutter:
  uses-material-design: true
  assets:
    - assets/icons/
    # - images/


flutter_native_splash:

  # color or background_image is the only required parameter.  Use color to set the background
  # of your splash screen to a solid color.  Use background_image to set the background of your
  # splash screen to a png image.  This is useful for gradients. The image will be stretch to the
  # size of the app. Only one parameter can be used, color and background_image cannot both be set.
  color: "#ffffff"
  # background_image: "assets/background.png"

  # Optional parameters are listed below.  To enable a parameter, uncomment the line by removing
  # the leading # character.

  # The image parameter allows you to specify an image used in the splash screen.  It must be a
  # png file and should be sized for 4x pixel density.
  image: assets/icons/app_logo.png

  # This property allows you to specify an image used as branding in the splash screen. It must be
  # a png file. Currently, it is only supported for Android and iOS.
  # branding: assets/icons/app_logo.png

  # Specify your branding image for dark mode.
  #branding_dark: assets/dart_dark.png

  # To position the branding image at the bottom of the screen you can use bottom, bottomRight,
  # and bottomLeft. The default values is bottom if not specified or specified something else.
  #
  # Make sure this content mode value should not be similar to android_gravity value and ios_content_mode
  # value.
  # branding_mode: center

  # The color_dark, background_image_dark, and image_dark are parameters that set the background
  # and image when the device is in dark mode. If they are not specified, the app will use the
  # parameters from above. If the image_dark parameter is specified, color_dark or
  # background_image_dark must be specified.  color_dark and background_image_dark cannot both be
  # set.
  color_dark: "#191919"
  #background_image_dark: "assets/dark-background.png"
  #image_dark: assets/splash-invert.png

  # The android, ios and web parameters can be used to disable generating a splash screen on a given
  # platform.
  #android: false
  #ios: false
  #web: false

  # The position of the splash image can be set with android_gravity, ios_content_mode, and
  # web_image_mode parameters.  All default to center.
  #
  # android_gravity can be one of the following Android Gravity (see
  # https://developer.android.com/reference/android/view/Gravity): bottom, center,
  # center_horizontal, center_vertical, clip_horizontal, clip_vertical, end, fill, fill_horizontal,
  # fill_vertical, left, right, start, or top.
  #android_gravity: center
  #
  # ios_content_mode can be one of the following iOS UIView.ContentMode (see
  # https://developer.apple.com/documentation/uikit/uiview/contentmode): scaleToFill,
  # scaleAspectFit, scaleAspectFill, center, top, bottom, left, right, topLeft, topRight,
  # bottomLeft, or bottomRight.
  #ios_content_mode: center
  #
  # web_image_mode can be one of the following modes: center, contain, stretch, and cover.
  #web_image_mode: center

  # To hide the notification bar, use the fullscreen parameter.  Has no affect in web since web
  # has no notification bar.  Defaults to false.
  # NOTE: Unlike Android, iOS will not automatically show the notification bar when the app loads.
  #       To show the notification bar, add the following code to your Flutter app:
  #       WidgetsFlutterBinding.ensureInitialized();
  #       SystemChrome.setEnabledSystemUIOverlays([SystemUiOverlay.bottom, SystemUiOverlay.top]);
  #fullscreen: true
  
  # If you have changed the name(s) of your info.plist file(s), you can specify the filename(s) 
  # with the info_plist_files parameter.  Remove only the # characters in the three lines below,
  # do not remove any spaces:
  #info_plist_files:
  #  - 'ios/Runner/Info-Debug.plist'
  #  - 'ios/Runner/Info-Release.plist'